name: Deploy to Database

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Укажите нужную версию Python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2
          pip install minio

      - name: Minio Deploy
        with:
          endpoint: localhost:9000
          access_key: minioadmin
          secret_key: minioadmin
          bucket: 'a-symbol'
        run: |
          mc admin config set myminio notify_postgres:minio-postgres-a connection_string="user=$DB_USER password=$DB_PASSWORD host=$DB_HOST dbname=$DB_NAME port=5432 sslmode=disable" table="a_symbol" format="namespace"
          mc admin service restart myminio
          mc event add myminio/a-symbol arn:minio:sqs::minio-postgres-a:postgresql --event put,get,delete

      - name: Run a multi-line script
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          echo "Running database migration script..."
          
          cd manuscript_pg
          
          if [ ! -f meta.yaml ]; then
            echo "meta.yaml file not found!"
            exit 1
          fi
          
          mapfile -t filenames < meta.yaml
          
          for filename in "${filenames[@]}"; do
            if [ -z "$filename" ]; then
              echo "Skipping empty line"
              continue
            fi
          
            echo "Processing: $filename" 
          
            set +e
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f "$filename"
            if [ $? -ne 0 ]; then
              echo "Error processing file: $filename"
              continue
            fi
            set -e
          done
          
          cd ../manuscript_py
          
          if [ ! -f meta.yaml ]; then
            echo "meta.yaml file not found!"
            exit 1
          fi
          
          mapfile -t filenames < meta.yaml
          
          for filename in "${filenames[@]}"; do
            if [ -z "$filename" ]; then
              echo "Skipping empty line"
              continue
            fi
          
            echo "Processing: $filename"
          
            python "$filename"
            if [ $? -ne 0 ]; then
              echo "Error processing file: $filename"
              continue
            fi
          done
        shell: /usr/bin/bash -e {0}
